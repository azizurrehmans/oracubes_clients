
ALTER TABLE SAHI.INV_STORE MODIFY(USER_ID  NULL);
ALTER TABLE SAHI.INV_STORE MODIFY(FDATETIME  NULL);
ALTER TABLE SAHI.INV_STORE MODIFY(STATUS_ID  NULL);
ALTER TABLE SAHI.INV_STORE  ADD CONSTRAINT INV_STORE_PK  PRIMARY KEY  (STORE_ID);
ALTER TABLE SAHI.INV_STORE_RACK MODIFY(FDATETIME  NULL);
ALTER TABLE SAHI.INV_STORE_RACK MODIFY(USER_ID  NULL);
ALTER TABLE SAHI.INV_STORE_RACK MODIFY(STATUS_ID  NULL);
ALTER TABLE SAHI.INV_STORE_RACK ADD CONSTRAINT INV_STORE_RACK_PK PRIMARY KEY (STORE_ID, RACK_ID);
-----
ALTER TABLE SAHI.INV_SC_LOCATION
 DROP PRIMARY KEY CASCADE;
DROP TABLE SAHI.INV_SC_LOCATION CASCADE CONSTRAINTS;

CREATE TABLE SAHI.INV_SC_LOCATION
(
  STORE_ID  VARCHAR2(50 BYTE),
  RACK_ID   NUMBER,
  SC_ID     NUMBER
)
TABLESPACE ORACUBES
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX SAHI.INV_SC_LOCATION_PK ON SAHI.INV_SC_LOCATION
(STORE_ID, RACK_ID, SC_ID)
LOGGING
TABLESPACE ORACUBES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


ALTER TABLE SAHI.INV_SC_LOCATION ADD (
  CONSTRAINT INV_SC_LOCATION_PK
 PRIMARY KEY
 (STORE_ID, RACK_ID, SC_ID)
    USING INDEX 
    TABLESPACE ORACUBES
    PCTFREE    10
    INITRANS   2
    MAXTRANS   255
    STORAGE    (
                INITIAL          64K
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                PCTINCREASE      0
               ));
-----
CREATE OR REPLACE FUNCTION SAHI."COUNTCHAR" (c1 varchar2,c2 varchar2) RETURN number IS
x number;
v varchar2(50);
thisc char(1);
y number;
BEGIN
    y := 0;
  x := length(c1);
  for a in 1 .. x
  loop
      thisc := substr(c1,a,1);
      if (thisc = c2 ) then
          y := y + 1;
      end if;    
  end loop;
  
  return y;
END;
/               

